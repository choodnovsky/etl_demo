[2023-05-02 10:32:31,896] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: dag_etl.create_nds_tables_if_not_exists scheduled__2023-04-30T00:00:00+00:00 [queued]>
[2023-05-02 10:32:32,248] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: dag_etl.create_nds_tables_if_not_exists scheduled__2023-04-30T00:00:00+00:00 [queued]>
[2023-05-02 10:32:32,252] {taskinstance.py:1356} INFO - 
--------------------------------------------------------------------------------
[2023-05-02 10:32:32,258] {taskinstance.py:1357} INFO - Starting attempt 1 of 6
[2023-05-02 10:32:32,266] {taskinstance.py:1358} INFO - 
--------------------------------------------------------------------------------
[2023-05-02 10:32:32,831] {taskinstance.py:1377} INFO - Executing <Task(PostgresOperator): create_nds_tables_if_not_exists> on 2023-04-30 00:00:00+00:00
[2023-05-02 10:32:32,912] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'dag_etl', 'create_nds_tables_if_not_exists', 'scheduled__2023-04-30T00:00:00+00:00', '--job-id', '389', '--raw', '--subdir', 'DAGS_FOLDER/dag_etl_taskflow.py', '--cfg-path', '/tmp/tmpjkbajdgf', '--error-file', '/tmp/tmphdlkc1fa']
[2023-05-02 10:32:32,918] {standard_task_runner.py:80} INFO - Job 389: Subtask create_nds_tables_if_not_exists
[2023-05-02 10:32:32,901] {standard_task_runner.py:52} INFO - Started process 441 to run task
[2023-05-02 10:32:34,374] {task_command.py:370} INFO - Running <TaskInstance: dag_etl.create_nds_tables_if_not_exists scheduled__2023-04-30T00:00:00+00:00 [running]> on host 295d97741f96
[2023-05-02 10:32:37,716] {taskinstance.py:1571} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=Victor
AIRFLOW_CTX_DAG_ID=dag_etl
AIRFLOW_CTX_TASK_ID=create_nds_tables_if_not_exists
AIRFLOW_CTX_EXECUTION_DATE=2023-04-30T00:00:00+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2023-04-30T00:00:00+00:00
[2023-05-02 10:32:38,275] {base.py:68} INFO - Using connection ID 'postgres_conn' for task execution.
[2023-05-02 10:32:38,386] {dbapi.py:213} INFO - Running statement: 
            CREATE SCHEMA IF NOT EXISTS dds;
            CREATE SCHEMA IF NOT EXISTS nds;
    
            SET search_path TO dds;        
            
            --// создаем таблицу с ветками //--
            CREATE TABLE IF NOT EXISTS dim_branch(
            id SERIAL PRIMARY KEY,
            branch VARCHAR(100) NOT NULL);
            
            --// создаем таблицу с городами //--
            CREATE TABLE IF NOT EXISTS dim_city(
            id SERIAL PRIMARY KEY,
            city VARCHAR(100) NOT NULL);
            
            --// создаем таблицу с типами клиентов //--
            CREATE TABLE IF NOT EXISTS dim_customer_type(
            id SERIAL PRIMARY KEY,
            customer_type VARCHAR(200) NOT NULL);
            
            --// создаем таблицу с гендерами //--
            CREATE TABLE IF NOT EXISTS dim_gender(
            id SERIAL PRIMARY KEY,
            gender VARCHAR(200) NOT NULL);
            
            --// создаем таблицу с продуктовыми линейками //--
            CREATE TABLE IF NOT EXISTS dim_product_line(
            id SERIAL PRIMARY KEY,
            product_line VARCHAR(200) NOT NULL);
            
            --// создаем таблицу с видами оплат //--
            CREATE TABLE IF NOT EXISTS dim_payment(
            id SERIAL PRIMARY KEY,
            payment VARCHAR(100) NOT NULL);
            
            --// создаем таблицу с фактами //--       
            CREATE TABLE IF NOT EXISTS fact_sales(
            invoice_id VARCHAR(15) PRIMARY KEY,
            branch INT NOT NULL REFERENCES dim_branch(id),
            city INT NOT NULL REFERENCES dim_city(id),
            customer_type INT NOT NULL REFERENCES dim_customer_type(id),
            gender INT NOT NULL REFERENCES dim_gender(id),
            product_line INT NOT NULL REFERENCES dim_product_line(id),
            unit_price DOUBLE PRECISION,
            quantity DOUBLE PRECISION,
            "tax_5%" DOUBLE PRECISION,
            total DOUBLE PRECISION,
            date DATE NOT NULL,
            time TIME NOT NULL,
            payment INT NOT NULL REFERENCES dim_payment(id),
            cogs DOUBLE PRECISION,
            gross_margin_percentage DOUBLE PRECISION,
            gross_income DOUBLE PRECISION,
            rating DOUBLE PRECISION);        
        , parameters: None
[2023-05-02 10:32:38,463] {postgres.py:94} INFO - NOTICE:  schema "dds" already exists, skipping

[2023-05-02 10:32:38,475] {postgres.py:94} INFO - NOTICE:  schema "nds" already exists, skipping

[2023-05-02 10:32:38,490] {postgres.py:94} INFO - NOTICE:  relation "dim_branch" already exists, skipping

[2023-05-02 10:32:38,495] {postgres.py:94} INFO - NOTICE:  relation "dim_city" already exists, skipping

[2023-05-02 10:32:38,521] {postgres.py:94} INFO - NOTICE:  relation "dim_customer_type" already exists, skipping

[2023-05-02 10:32:38,564] {postgres.py:94} INFO - NOTICE:  relation "dim_gender" already exists, skipping

[2023-05-02 10:32:38,565] {postgres.py:94} INFO - NOTICE:  relation "dim_product_line" already exists, skipping

[2023-05-02 10:32:38,566] {postgres.py:94} INFO - NOTICE:  relation "dim_payment" already exists, skipping

[2023-05-02 10:32:38,570] {postgres.py:94} INFO - NOTICE:  relation "fact_sales" already exists, skipping

[2023-05-02 10:32:40,889] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=dag_etl, task_id=create_nds_tables_if_not_exists, execution_date=20230430T000000, start_date=20230502T103231, end_date=20230502T103240
[2023-05-02 10:32:41,775] {local_task_job.py:156} INFO - Task exited with return code 0
[2023-05-02 10:32:44,728] {local_task_job.py:273} INFO - 2 downstream tasks scheduled from follow-on schedule check
[2023-05-02 10:37:27,470] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: dag_etl.create_nds_tables_if_not_exists scheduled__2023-04-30T00:00:00+00:00 [queued]>
[2023-05-02 10:37:27,778] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: dag_etl.create_nds_tables_if_not_exists scheduled__2023-04-30T00:00:00+00:00 [queued]>
[2023-05-02 10:37:27,779] {taskinstance.py:1356} INFO - 
--------------------------------------------------------------------------------
[2023-05-02 10:37:27,780] {taskinstance.py:1357} INFO - Starting attempt 1 of 6
[2023-05-02 10:37:27,781] {taskinstance.py:1358} INFO - 
--------------------------------------------------------------------------------
[2023-05-02 10:37:28,389] {taskinstance.py:1377} INFO - Executing <Task(PostgresOperator): create_nds_tables_if_not_exists> on 2023-04-30 00:00:00+00:00
[2023-05-02 10:37:28,488] {standard_task_runner.py:52} INFO - Started process 945 to run task
[2023-05-02 10:37:28,580] {standard_task_runner.py:79} INFO - Running: ['***', 'tasks', 'run', 'dag_etl', 'create_nds_tables_if_not_exists', 'scheduled__2023-04-30T00:00:00+00:00', '--job-id', '422', '--raw', '--subdir', 'DAGS_FOLDER/dag_etl_taskflow.py', '--cfg-path', '/tmp/tmpgbdqzyd4', '--error-file', '/tmp/tmpi14qt8bz']
[2023-05-02 10:37:28,628] {standard_task_runner.py:80} INFO - Job 422: Subtask create_nds_tables_if_not_exists
[2023-05-02 10:37:30,844] {task_command.py:370} INFO - Running <TaskInstance: dag_etl.create_nds_tables_if_not_exists scheduled__2023-04-30T00:00:00+00:00 [running]> on host 295d97741f96
[2023-05-02 10:37:36,335] {taskinstance.py:1571} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=Victor
AIRFLOW_CTX_DAG_ID=dag_etl
AIRFLOW_CTX_TASK_ID=create_nds_tables_if_not_exists
AIRFLOW_CTX_EXECUTION_DATE=2023-04-30T00:00:00+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2023-04-30T00:00:00+00:00
[2023-05-02 10:37:36,800] {base.py:68} INFO - Using connection ID 'postgres_conn' for task execution.
[2023-05-02 10:37:36,908] {dbapi.py:213} INFO - Running statement: 
            CREATE SCHEMA IF NOT EXISTS dds;
            CREATE SCHEMA IF NOT EXISTS nds;
    
            SET search_path TO dds;        
            
            --// создаем таблицу с ветками //--
            CREATE TABLE IF NOT EXISTS dim_branch(
            id SERIAL PRIMARY KEY,
            branch VARCHAR(100) NOT NULL);
            
            --// создаем таблицу с городами //--
            CREATE TABLE IF NOT EXISTS dim_city(
            id SERIAL PRIMARY KEY,
            city VARCHAR(100) NOT NULL);
            
            --// создаем таблицу с типами клиентов //--
            CREATE TABLE IF NOT EXISTS dim_customer_type(
            id SERIAL PRIMARY KEY,
            customer_type VARCHAR(200) NOT NULL);
            
            --// создаем таблицу с гендерами //--
            CREATE TABLE IF NOT EXISTS dim_gender(
            id SERIAL PRIMARY KEY,
            gender VARCHAR(200) NOT NULL);
            
            --// создаем таблицу с продуктовыми линейками //--
            CREATE TABLE IF NOT EXISTS dim_product_line(
            id SERIAL PRIMARY KEY,
            product_line VARCHAR(200) NOT NULL);
            
            --// создаем таблицу с видами оплат //--
            CREATE TABLE IF NOT EXISTS dim_payment(
            id SERIAL PRIMARY KEY,
            payment VARCHAR(100) NOT NULL);
            
            --// создаем таблицу с фактами //--       
            CREATE TABLE IF NOT EXISTS fact_sales(
            invoice_id VARCHAR(15) PRIMARY KEY,
            branch INT NOT NULL REFERENCES dim_branch(id),
            city INT NOT NULL REFERENCES dim_city(id),
            customer_type INT NOT NULL REFERENCES dim_customer_type(id),
            gender INT NOT NULL REFERENCES dim_gender(id),
            product_line INT NOT NULL REFERENCES dim_product_line(id),
            unit_price DOUBLE PRECISION,
            quantity DOUBLE PRECISION,
            "tax_5%" DOUBLE PRECISION,
            total DOUBLE PRECISION,
            date DATE NOT NULL,
            time TIME NOT NULL,
            payment INT NOT NULL REFERENCES dim_payment(id),
            cogs DOUBLE PRECISION,
            gross_margin_percentage DOUBLE PRECISION,
            gross_income DOUBLE PRECISION,
            rating DOUBLE PRECISION);        
        , parameters: None
[2023-05-02 10:37:36,933] {postgres.py:94} INFO - NOTICE:  schema "dds" already exists, skipping

[2023-05-02 10:37:36,935] {postgres.py:94} INFO - NOTICE:  schema "nds" already exists, skipping

[2023-05-02 10:37:36,937] {postgres.py:94} INFO - NOTICE:  relation "dim_branch" already exists, skipping

[2023-05-02 10:37:36,939] {postgres.py:94} INFO - NOTICE:  relation "dim_city" already exists, skipping

[2023-05-02 10:37:36,941] {postgres.py:94} INFO - NOTICE:  relation "dim_customer_type" already exists, skipping

[2023-05-02 10:37:36,943] {postgres.py:94} INFO - NOTICE:  relation "dim_gender" already exists, skipping

[2023-05-02 10:37:36,945] {postgres.py:94} INFO - NOTICE:  relation "dim_product_line" already exists, skipping

[2023-05-02 10:37:36,946] {postgres.py:94} INFO - NOTICE:  relation "dim_payment" already exists, skipping

[2023-05-02 10:37:36,953] {postgres.py:94} INFO - NOTICE:  relation "fact_sales" already exists, skipping

[2023-05-02 10:37:37,614] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=dag_etl, task_id=create_nds_tables_if_not_exists, execution_date=20230430T000000, start_date=20230502T103727, end_date=20230502T103737
[2023-05-02 10:37:38,206] {local_task_job.py:156} INFO - Task exited with return code 0
[2023-05-02 10:37:39,941] {local_task_job.py:273} INFO - 2 downstream tasks scheduled from follow-on schedule check
